[{"/home/gregorio/Documents/projects/netflixclone/src/index.js":"1","/home/gregorio/Documents/projects/netflixclone/src/App.js":"2","/home/gregorio/Documents/projects/netflixclone/src/Tmdb.js":"3","/home/gregorio/Documents/projects/netflixclone/src/components/MovieRow.js":"4","/home/gregorio/Documents/projects/netflixclone/src/components/FeaturedMovie.js":"5","/home/gregorio/Documents/projects/netflixclone/src/components/Header.js":"6"},{"size":199,"mtime":1608840215807,"results":"7","hashOfConfig":"8"},{"size":1873,"mtime":1609206857156,"results":"9","hashOfConfig":"8"},{"size":2526,"mtime":1609194856942,"results":"10","hashOfConfig":"8"},{"size":1028,"mtime":1609208810457,"results":"11","hashOfConfig":"8"},{"size":1667,"mtime":1609196380676,"results":"12","hashOfConfig":"8"},{"size":635,"mtime":1609206346873,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"1di5s8h",{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32","usedDeprecatedRules":"33"},"/home/gregorio/Documents/projects/netflixclone/src/index.js",[],["34","35"],"/home/gregorio/Documents/projects/netflixclone/src/App.js",["36"],"/home/gregorio/Documents/projects/netflixclone/src/Tmdb.js",["37"],"const API_KEY = '79e755c2d3c53f2e426c8e32117b7c5c';\nconst API_BASE = 'https://api.themoviedb.org/3';\n\nconst basicFetch = async (endpoint) => {\n    const req = await fetch(`${API_BASE}${endpoint}`);\n    const json = await req.json();\n    return json;\n}\n\nexport default {\n    getHomeList: async () => {\n        return [\n            {\n                slug: 'originals',\n                title: 'Originais da Netflix',\n                items: await basicFetch(`/discover/tv?with_network=213&language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'trending',\n                title: 'Recomendados para Você',\n                items: await basicFetch(`/trending/all/week?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'toprated',\n                title: 'Em alta',\n                items: await basicFetch(`/movie/top_rated?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'action',\n                title: 'Ação',\n                items: await basicFetch(`/discover/movie?with_genre=28?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'comedy',\n                title: 'Comédia',\n                items: await basicFetch(`/discover/movie?with_genre=35?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'horror',\n                title: 'Terror',\n                items: await basicFetch(`/discover/movie?with_genre=27?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'romance',\n                title: 'Romance',\n                items: await basicFetch(`/discover/movie?with_genre=10749?language=pt-BR&api_key=${API_KEY}`)\n            },\n            {\n                slug: 'documentary',\n                title: 'Documentário',\n                items: await basicFetch(`/discover/movie?with_genre=99?language=pt-BR&api_key=${API_KEY}`)\n            }\n        ];\n    },\n    getMovieInfo: async (movieId, type) => {\n        let info = {};\n        if(movieId) {\n            switch(type) {\n                case 'movie':\n                    info = await basicFetch(`/movie/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                case 'tv':\n                    info = await basicFetch(`/tv/${movieId}?language=pt-BR&api_key=${API_KEY}`);\n                break;\n                default:\n                    info = null;\n                break\n            }\n        }\n        return info;\n    }\n}",["38","39"],"/home/gregorio/Documents/projects/netflixclone/src/components/MovieRow.js",["40"],"import React from 'react';\nimport './MovieRow.css';\nimport NavigateBeforeIcon from '@material-u/icons/NavigateBefore';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\n\nexport default ({title, items}) => {\n    return(\n        <div className=\"MovieRow\">\n            <h2>{title}</h2>\n            <div className=\"movieRow--left\">\n                <NavigateBeforeIcon style={{fontSize: 50}} /> \n            </div>\n            <div className=\"movieRow--right\">\n                <NavigateNextIcon style={{fontSize: 50}} /> \n            </div>\n            <div className=\"movieRow--listarea\">\n                <div className=\"movieRow--list\">\n                    {items.results.length > 0 && items.results.map((item, key)=>(\n                        <div className=\"movieRow--item\">\n                            <img src={`https://image.tmdb.org/t/p/w300${item.poster_path}`} alt={item.original_title} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n}","/home/gregorio/Documents/projects/netflixclone/src/components/FeaturedMovie.js",["41"],"import React from 'react';\nimport './FeaturedMovie.css';\n\nexport default ({item}) => {\n    let firstDate = new Date(item.first_air_date);\n    let genres = [];\n    for(let i in item.genres) {\n        genres.push(item.genres[i].name)\n    }\n\n    return (\n        <section className=\"featured\" style={{\n            backgroundSize: 'cover',\n            backgroundPosition: 'center',\n            backgroundImage: `url(https://image.tmdb.org/t/p/original${item.backdrop_path})`\n        }}>\n            <div className=\"featured--vertical\">\n                <div className=\"featured--horizontal\">\n                    <div className=\"featured--name\">\n                        {item.original_name}\n                    </div>\n                    <div className=\"featured--info\">\n                        <div className=\"featured--points\">{item.vote_average} pontos</div>\n                        <div className=\"featured--year\">{firstDate.getFullYear()}</div>\n                        <div className=\"featured--seasons\">{item.number_of_seasons} temporada{item.number_of_seasons !== 1 ? \"s\" : \"\"}</div>\n                    </div>\n                    <div className=\"featured--description\">{item.overview}</div>\n                    <div className=\"featured--buttons\">\n                        <a href={`/watch/${item.id}`} className=\"featured--watchbutton\">► Assistir</a>\n                        <a href={`/list/add/${item.id}`} className=\"featured--mylistbutton\">+ Minha Lista</a>\n                    </div>\n                    <div className=\"featured--genres\"><strong>Gêneros: </strong>{genres.join(', ')}</div>\n                </div>\n            </div>\n        </section>\n    );\n}",["42","43"],"/home/gregorio/Documents/projects/netflixclone/src/components/Header.js",["44","45","46"],"import React from 'react';\nimport './Header.css';\n\nexport default ({black}) => {\n    return (\n        <header className={black ? 'black' : ''}>\n            <div className=\"header--logo\">\n                <a href=\"\">\n                    <img src=\"https://assets.stickpng.com/images/580b57fcd9996e24bc43c529.png\" alt=\"netflix\" />\n                </a>\n            </div>\n            <div className=\"header--user\">\n                <a href=\"\">\n                    <img src=\"https://blogs.studentlife.utoronto.ca/lifeatuoft/files/2015/02/FullSizeRender.jpg\" alt=\"Usuário\" />\n                </a>\n            </div>\n        </header>\n    );\n}",["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":9,"column":1,"nodeType":"55","endLine":69,"endColumn":2},{"ruleId":"53","severity":1,"message":"56","line":10,"column":1,"nodeType":"55","endLine":72,"endColumn":2},{"ruleId":"49","replacedBy":"57"},{"ruleId":"51","replacedBy":"58"},{"ruleId":"53","severity":1,"message":"54","line":6,"column":1,"nodeType":"55","endLine":27,"endColumn":2},{"ruleId":"53","severity":1,"message":"54","line":4,"column":1,"nodeType":"55","endLine":37,"endColumn":2},{"ruleId":"49","replacedBy":"59"},{"ruleId":"51","replacedBy":"60"},{"ruleId":"53","severity":1,"message":"54","line":4,"column":1,"nodeType":"55","endLine":19,"endColumn":2},{"ruleId":"61","severity":1,"message":"62","line":8,"column":17,"nodeType":"63","endLine":8,"endColumn":28},{"ruleId":"61","severity":1,"message":"62","line":13,"column":17,"nodeType":"63","endLine":13,"endColumn":28},{"ruleId":"49","replacedBy":"64"},{"ruleId":"51","replacedBy":"65"},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","Assign object to a variable before exporting as module default",["66"],["67"],["66"],["67"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["66"],["67"],"no-global-assign","no-unsafe-negation"]